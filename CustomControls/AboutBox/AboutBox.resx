<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="aboutInfo.Picture" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAWRXhpZgAASUkqAAgAAAAAAAAAAAD/2wBDAAgGBgcGBQgHBwcJ
        CQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJ
        CQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
        MjL/wAARCADIAL4DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAA
        AgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRol
        JicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QA
        HwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
        BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RV
        VldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPE
        xcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDyHyQDtQBgeM96sw2k
        cAzPlj/CgqNJhFED5bKV6ntSwma4kB2kjPDYrBtsk14zapp8rOwiZlIhVVBZ24zn0+tZIvhb28kQUZZj
        hj15x/gar3lwd4TcGCjbVVYpJADnNWvMEXW2Yd2lIBOV55wef61G6hpFkSTeMjJ7Zz/9ak+zqV5Yh/Qd
        6W3jlUNsbhT90/h/9ejQLkl3buiIZQUU52sQOSKT7GJYAQQHRSSMdasTx3mr3EFhbWzzXIz8qcliTnI9
        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
</value>
  </data>
</root>